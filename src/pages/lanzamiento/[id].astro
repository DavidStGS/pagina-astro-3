---
import { getDataByID } from "../../lib/FetchData";
import Layout from "../../layouts/Layout.astro";
import { getData } from "../../lib/FetchData";

interface Props {
  success: boolean;
}

const { success } = Astro.props;

const sucessText = success ? "Exito" : "Fracaso";

export async function getStaticPaths() {
  const lanzamientos = await getData();

  return lanzamientos.map((lanzamiento) => ({
    params: { id: lanzamiento.id },
  }));
}

const { id } = Astro.params;

let lanzamieto;

if (id) {
  lanzamieto = await getDataByID({ id });
}
---

<Layout title={`Lanzamiento ${id}`}>
  <article class="flex flex-col justify-center">
    <img
      class="mb-12 rounded-t-lg max-w-sm m-auto"
      src={lanzamieto?.links?.patch.small}
      alt=""
      transition:name={`imgeffect-${id}`}
    />
    <header class="p-7 m-auto">
      <span
        transition:name={`successffect-${id}`}
        class={`${
          lanzamieto?.success
            ? " text-center bg-green-300 text-green-700"
            : "bg-red-400 text-red-700 text-center"
        } text.xs font-semibold mr-2 px-2.5 py-0.5 rounded`}
        >{sucessText}
      </span>
    </header>
    <h2
      class="m-auto text-2xl font-bold tracking-tight text-gray-900 dark:text-white pb-8"
      transition:name={`titleffect-${id}`}
    >
      Lanzamiento #{lanzamieto?.flight_number}
    </h2>
    <p
      class="m-auto font-normal text-gray-700 dark:text-gray-400"
      transition:name={`detffect-${id}`}
    >
      {
        lanzamieto?.details != null && lanzamieto?.details?.length > 100
          ? lanzamieto?.details.substring(0, 100) + "..."
          : lanzamieto?.details ?? "Sin detalles"
      }
    </p>
  </article>
</Layout>
